class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p==NULL && q==NULL)
        {
            return true;
        }
        if(p==NULL && q!=NULL)
        {
            return false;
        }
        if(p!=NULL && q==NULL)
        {
            return false;
        }
        bool left=isSameTree(p->left , q->left);             // here function is calling so write before(....) to isSameTree.
        bool right=isSameTree(p->right , q->right);          // here it must be , not && as simulatneouly calling both function
        bool value=(p->val==q->val);
        if(left && right && value)
        {
        return true;
        }
        else
        return false;
        
    }
};
                                                             // This also cover the tree having single Node.
