class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> result;
        if(root==NULL)
        return result;
        queue<TreeNode*> q;
        q.push(root);

        bool lefttoright=true;
        while(!q.empty())
        {
            int size=q.size();
            vector<int> ans(size);
            // level processs
        for(int i=0;i<size;i++)
        {
            TreeNode*frontNode=q.front();
            q.pop();
        //normal insertaion ya reverse insertion
        int index=lefttoright ? i :size-1-i;
        ans[index]=frontNode->val;
        if(frontNode->left!=NULL)
        q.push(frontNode->left);
        if(frontNode->right!=NULL)
        q.push(frontNode->right);

        }
        // direction change krni hai...
        lefttoright=!lefttoright;
        result.push_back(ans);
        }
        return result;
        
    }
};
